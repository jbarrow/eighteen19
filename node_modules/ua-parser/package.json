{
  "name": "ua-parser",
  "description": "A port of Browserscope's user agent parser.",
  "main": "./js/index",
  "version": "0.2.4",
  "maintainers": [
    {
      "name": "Tobie Langel",
      "email": "tobie.langel@gmail.com",
      "url": "http://tobielangel.com"
    }
  ],
  "contributors": [
    {
      "name": "Tobie Langel",
      "email": "tobie.langel@gmail.com",
      "url": "http://tobielangel.com"
    },
    {
      "name": "Lindsey Simon",
      "email": "lsimon@commoner.com",
      "url": "http://www.idreamofuni.com"
    },
    {
      "name": "Philip Tellis",
      "email": "philip@bluesmoon.info",
      "url": "http://bluesmoon.info"
    },
    {
      "name": "Dave Olsen",
      "email": "dmolsen@gmail.com",
      "url": "http://dmolsen.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/tobie/ua-parser.git"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.github.com/tobie/ua-parser/master/js/LICENSE"
    },
    {
      "type": "Apache-2.0",
      "url": "https://raw.github.com/tobie/ua-parser/master/js/LICENSE"
    }
  ],
  "dependencies": {
    "yamlparser": ">=0.0.2"
  },
  "readme": "ua-parser\n=========\n\n`ua-parser` is a multi-language port of [BrowserScope][2]'s [user agent string parser][3].\n\nThe crux of the original parser--the data collected by [Steve Souders][4] over the years--has been extracted into a separate [YAML file][5] so as to be reusable _as is_ by implementations in other programming languages.\n\n`ua-parser` is just a small wrapper around this data.\n\n\nUsage :: [node.js][1]\n---------------------\n```js\nvar uaParser = require('ua-parser');\nvar ua = uaParser.parse(navigator.userAgent);\n\nconsole.log(ua.tostring());\n// -> \"Safari 5.0.1\"\n\nconsole.log(ua.toVersionString());\n// -> \"5.0.1\"\n\nconsole.log(ua.family);\n// -> \"Safari\"\n\nconsole.log(ua.major);\n// -> 5\n\nconsole.log(ua.minor);\n// -> 0\n\nconsole.log(ua.patch);\n// -> 1\n```\n\n\nUsage :: python\n---------------\n```python\n# Install this into python site_packages like so:\n#\n# python setup.py install\n#\n# Now you're good to go.\n\nfrom ua_parser import user_agent_parser\n\n# On the server, you could use a WebOB request object.\nuser_agent_string = request.META.get('HTTP_USER_AGENT')\n\n# For demonstration purposes, though an iPhone ...\nuser_agent_string = 'Mozilla/5.0 (iPhone; CPU iPhone OS 5_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B179 Safari/7534.48.3'\n\n# Get back a big dictionary of all the goodies.\nresult_dict = user_agent_parser.Parse(user_agent_string)\n\nprint result_dict['user_agent']\n# {'major': '5', 'minor': '1', 'family': 'Mobile Safari', 'patch': None}\n\nprint result_dict['os']\n# {'major': '5', 'patch_minor': None, 'minor': '1', 'family': 'iOS', 'patch': None}\n\nprint result_dict['device']\n# {'is_spider': False, 'is_mobile': True, 'family': 'iPhone'}\n```\n\n\nUsage :: java\n-------------\n```java\nimport ua_parser.Parser;\nimport ua_parser.Client;\n\n...\n\n  String uaString = \"Mozilla/5.0 (iPhone; CPU iPhone OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3\";\n\n  Parser uaParser = new Parser();\n  Client c = uaParser.parse(uaString);\n\n  System.out.println(c.userAgent.family); // => \"Mobile Safari\"\n  System.out.println(c.userAgent.major);  // => \"5\"\n  System.out.println(c.userAgent.minor);  // => \"1\"\n\n  System.out.println(c.os.family);        // => \"iOS\"\n  System.out.println(c.os.major);         // => \"5\"\n  System.out.println(c.os.minor);         // => \"1\"\n\n  System.out.println(c.device.family);    // => \"iPhone\"\n  System.out.println(c.device.isMobile);  // => true\n  System.out.println(c.device.isSpider);  // => false\n```\n\n\nUsage :: php\n------------\n\n```php\nrequire(\"UAParser.php\");\n$ua = UA::parse();\n\nprint $ua->family;        // Chrome (can also use $ua->browser)\nprint $ua->major;         // 16\nprint $ua->minor;         // 0\nprint $ua->patch;         // 912 (can also use $ua->build)\nprint $ua->browserFull;   // Chrome 16.0.912\nprint $ua->version;       // 16.0.912\n\nprint $ua->os;            // Mac OS X\nprint $ua->osMajor;       // 10\nprint $ua->osMinor;       // 6\nprint $ua->osPatch;       // 8 (can also use $ua->osBuild)\nprint $ua->osFull;        // Mac OS X 10.6.8\nprint $ua->osVersion;     // 10.6.8\n\nprint $ua->full;          // Chrome 16.0.912/Mac OS X 10.6.8\n\n// in select cases the device information will also be captured\n\nprint $ua->device;        // Palm Pixi\nprint $ua->deviceMajor;   // 1\nprint $ua->deviceMinor;   // 0\nprint $ua->deviceFull;    // Palm Pixi 1.0\nprint $ua->deviceVersion; // 1.0\n\n// some other generic boolean options\n\nprint $ua->isMobile;      // true or false\nprint $ua->isSpider;      // true or false\nprint $ua->isComputer;    // true or false\n\nMore information is available in the README in the PHP directory\n```\n\nUsage :: D\n-------------\n```d\nimport UaParser;\n\nimport std.stdio;\n\nvoid main() {\n    auto agent = UaParser.parse(\"Mozilla/5.0 (iPhone; CPU iPhone OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B206 Safari/7534.48.3\");\n    std.stdio.writeln(agent.browser.family); // Mobile Safari\n    std.stdio.writeln(agent.browser.major);  // 5\n    std.stdio.writeln(agent.browser.minor);  // 1\n    std.stdio.writeln(agent.browser.patch);  // 0\n    std.stdio.writeln(agent.browser.toString); // Mobile Safari 5.1.0\n    std.stdio.writeln(agent.browser.toVersionString); // 5.1.0\n\n    std.stdio.writeln(agent.os.family); // iOS\n    std.stdio.writeln(agent.os.major);  // 5\n    std.stdio.writeln(agent.os.minor);  // 1\n    std.stdio.writeln(agent.os.patch);  // 1\n    std.stdio.writeln(agent.os.toString); // iOS 5.1.1\n    std.stdio.writeln(agent.os.toVersionString); // 5.1.1\n\n    std.stdio.writeln(agent.toFullString); // Mobile Safari 5.1.0/iOS 5.1.1\n\n    std.stdio.writeln(agent.device.family); // iPhone\n    \n    std.stdio.writeln(agent.isMobile); // true\n    std.stdio.writeln(agent.isSpider); // false\n}\n```\n\n\nLicense\n-------\n\nThe data contained in `regexes.yaml` is Copyright 2009 Google Inc. and available under the [Apache License, Version 2.0][6].\n\nThe original python code is Copyright 2008 Google Inc. and is available under the [Apache License, Version 2.0][7].\n\nThe JS port is Copyright 2010 Tobie Langel and is available under [your choice of MIT or Apache Version 2.0 license][8].\n\nThe PHP port is Copyright (c) 2011-2012 Dave Olsen and is available under the [MIT license][9].\n\nThe Java port is Copyright (c) 2012 Twitter, Inc and is available under the [Apache License, Version 2.0][6].\n\nThe D port is Copyright (c) 2012 Shripad K and is available under the [MIT license][10].\n\n[1]: http://node.js\n[2]: http://www.browserscope.org\n[3]: http://code.google.com/p/ua-parser/\n[4]: http://stevesouders.com/\n[5]: https://raw.github.com/tobie/ua-parser/master/regexes.yaml\n[6]: http://www.apache.org/licenses/LICENSE-2.0\n[7]: https://raw.github.com/tobie/ua-parser/master/py/LICENSE\n[8]: https://raw.github.com/tobie/ua-parser/master/js/LICENSE\n[9]: https://raw.github.com/tobie/ua-parser/master/php/LICENSE\n[10]: https://raw.github.com/tobie/ua-parser/master/d/LICENSE\n\n",
  "_id": "ua-parser@0.2.4",
  "_from": "ua-parser"
}
